{"version":3,"sources":["webpack:///./src/app/app-food/food-address-edit/food-address-edit.module.ts","webpack:///./src/app/app-food/food-address-edit/food-address-edit.page.html","webpack:///./src/app/app-food/food-address-edit/food-address-edit.page.scss","webpack:///./src/app/app-food/food-address-edit/food-address-edit.page.ts"],"names":[],"mappings":"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","file":"app-food-food-address-edit-food-address-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FoodAddressEditPage } from './food-address-edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodAddressEditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FoodAddressEditPage]\n})\nexport class FoodAddressEditPageModule {}\n","module.exports = \"\\n<ion-header no-border>\\n        <ion-toolbar color=\\\"greengrab\\\">\\n                <ion-buttons color=\\\"light\\\" slot=\\\"start\\\" >\\n                        <ion-back-button></ion-back-button>\\n                    </ion-buttons>\\n                <!-- <ion-searchbar color=\\\"\\\" placeholder=\\\"Search..\\\" (ionFocus)=\\\"openSearchModal()\\\" search-icon=\\\"ios-pin\\\" ></ion-searchbar>   -->\\n              <ion-title color=\\\"\\\" class=\\\"main-header6\\\">Edit address</ion-title>\\n\\n        </ion-toolbar>\\n</ion-header>\\n      \\n      <ion-content no-padding>\\n     \\n          <div class=\\\"ion-margin ion-padding-top\\\">\\n       \\n              <form [formGroup]=\\\"addressForm\\\" novalidate>\\n                  <ion-list lines=\\\"\\\">   \\n                      <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Address label</ion-label>\\n                        <ion-input  type=\\\"text\\\"  formControlName=\\\"label\\\" ></ion-input>\\n                      </ion-item>\\n                      <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Fullname</ion-label>\\n                        <ion-input  type=\\\"text\\\"  formControlName=\\\"fullname\\\"  ></ion-input>\\n                      </ion-item>\\n                      <ion-item>\\n                          <ion-label position=\\\"stacked\\\">Phone number</ion-label>\\n                          <ion-input  type=\\\"number\\\"  formControlName=\\\"phone\\\"  ></ion-input>\\n                      </ion-item>             \\n                      <ion-item>\\n                          <ion-label position=\\\"stacked\\\">Address</ion-label>\\n                          <ion-textarea formControlName=\\\"address\\\"   rows = \\\"6\\\" auto-grow=true></ion-textarea>\\n                      </ion-item>\\n                    </ion-list>\\n              </form>\\n      \\n                <!-- Error meassage -->\\n                <p color=\\\"danger\\\" *ngIf=\\\"!addressForm.controls.label.valid  && addressForm.controls.label.touched \\\">\\n                        <ion-text color=\\\"warning\\\"><ion-icon name=\\\"information-circle-outline\\\"></ion-icon> Address label field must be at least 3 characters long!</ion-text>  \\n                      </p>\\n                      <p color=\\\"danger\\\" *ngIf=\\\"!addressForm.controls.fullname.valid  && addressForm.controls.fullname.touched\\\" >\\n                              <ion-text color=\\\"warning\\\"><ion-icon name=\\\"information-circle-outline\\\"></ion-icon> Fullname field must be at least 3 characters long!</ion-text>  \\n                      </p>\\n                      <p color=\\\"danger\\\" *ngIf=\\\"!addressForm.controls.phone.valid  && addressForm.controls.phone.touched \\\">\\n                              <ion-text color=\\\"warning\\\"><ion-icon name=\\\"information-circle-outline\\\"></ion-icon> Phone number field must be at least 3 characters long!</ion-text>  \\n                      </p>\\n                      <p color=\\\"danger\\\" *ngIf=\\\"!addressForm.controls.address.valid  && addressForm.controls.address.touched\\\">\\n                              <ion-text color=\\\"warning\\\"><ion-icon name=\\\"information-circle-outline\\\"></ion-icon> Address field must be at least 3 characters long!</ion-text>  \\n                      </p>\\n            \\n      \\n            <!-- <ion-button mode=\\\"ios\\\" color=\\\"orange\\\" expand=\\\"block\\\" fill=\\\"outline\\\" class=\\\"ion-margin-top\\\">\\n                Signinewwewe\\n            </ion-button> -->\\n    \\n          </div>\\n      </ion-content>\\n      <ion-footer  >\\n          <ion-toolbar>\\n              <ion-button color=\\\"greengrab\\\" expand=\\\"full\\\" [disabled]=\\\"!addressForm.valid\\\"   (click)=\\\"editAddress()\\\" >Update</ion-button>\\n              <ion-button color=\\\"danger\\\" expand=\\\"full\\\" fill=\\\"blank\\\" (click)=\\\"delAddress()\\\">Delete</ion-button>\\n              <!-- <input  #myControl [value]=\\\"(address | async)?.id\\\" type=\\\"hidden\\\" />\\n              <ion-button color=\\\"warning\\\" expand=\\\"full\\\" fill=\\\"blank\\\" (click)=\\\"deleteAddress(myControl.value)\\\">Delete</ion-button> -->\\n          </ion-toolbar>\\n      </ion-footer>\\n    \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC1mb29kL2Zvb2QtYWRkcmVzcy1lZGl0L2Zvb2QtYWRkcmVzcy1lZGl0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute , Router} from '@angular/router';\nimport { FormBuilder, FormGroup ,Validators } from '@angular/forms';\nimport { NavController} from '@ionic/angular';\n\nimport { UserService } from '../../services/user.service';\nimport { FoodService } from '../../services/food.service';\nimport { IonicComponentService} from '../../services/ionic-component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-food-address-edit',\n  templateUrl: './food-address-edit.page.html',\n  styleUrls: ['./food-address-edit.page.scss'],\n})\nexport class FoodAddressEditPage implements OnInit {\n\n\n  //public address: Observable<any[]>;\n  //public addressArray: any = [];\n  public addressId: string;\n  public addressForm: FormGroup;\n  \n  constructor( \n    public userService: UserService,\n    public foodService: FoodService,\n    private activatedRoute: ActivatedRoute,\n    private navController: NavController,\n    public router: Router,\n    //public alertController: AlertController,\n    private ionicComponentService: IonicComponentService,\n    public formBuilder: FormBuilder\n  )\n    { \n\n    this.addressId = this.activatedRoute.snapshot.paramMap.get('addressId');\n    this.addressForm = this.formBuilder.group({\n      label: ['', Validators.required],\n      fullname: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.minLength(6)]],\n      address: ['', Validators.required]\n\n  }); \n\n    }\n\n  ngOnInit() {\n   \n    //this.address = this.userService.getAddressById(this.addressId);\n    this.userService.getAddressById(this.addressId).subscribe(res => {\n      console.log(\"----->actionArray=\"+res);\n      console.log(\"Get user profile response=\"+res);\n      console.log(\"----->userDetailSub=\"+res.firstname);\n      console.log(\"----->userDetailSub=\"+res.lastname);\n      this.addressForm.get('label').setValue( res.label);\n      this.addressForm.get('fullname').setValue( res.fullname);\n      this.addressForm.get('phone').setValue( res.phone);\n      this.addressForm.get('address').setValue( res.address);\n      //this.addressArray = res;\n    });\n  }\n\n\n  \n  // openMap(categoryId) {\n    \n  //   console.log(\"openMap\");\n  //   this.modalController.create({\n  //     component: TravelMapPage,\n  //     componentProps: {\n  //       categoryId: categoryId\n  //     }\n  //   }).then(modal => {\n  //     modal.present();\n  //   });\n  // }\n\n  async editAddress(){\n    // console.log(\"userProfileId=\"+this.userService.getUserId());\n     console.log(\"_____call addAddress\");\n     if (!this.addressForm.valid){\n        console.log(this.addressForm.value);\n        console.log(\"____addressForm invalid \") \n        //this.presentAlert(\"invalid form\");\n     } else {\n      console.log(this.addressForm.value);\n        this.ionicComponentService.presentLoading();\n        await this.userService.editAddress(\n          this.addressId,\n          this.addressForm.value.label, \n          this.addressForm.value.fullname, \n          this.addressForm.value.phone,\n          this.addressForm.value.address\n        )\n       .then(  () => {\n           this.ionicComponentService.dismissLoading();\n           this.router.navigateByUrl('/food-address');\n       }, (error) => { \n          var errorMessage: string = error.message;\n          console.log(\"ERROR:\"+errorMessage);\n          this.ionicComponentService.dismissLoading();   \n          this.ionicComponentService.presentToast(errorMessage,4000);  \n       });\n   \n     }\n   }\n\n   async delAddress(){\n       this.ionicComponentService.presentLoading();\n       await this.userService.deleteAddress(this.addressId,)\n       .then(  () => {\n            // call loading \n          this.ionicComponentService.dismissLoading();\n           this.router.navigateByUrl('/food-address');\n       \n       }, (error) => { \n          var errorMessage: string = error.message;\n          console.log(\"ERROR:\"+errorMessage);\n          this.ionicComponentService.dismissLoading();\n          this.ionicComponentService.presentToast(errorMessage,4000);  \n       });\n   }\n\n\n}\n\n"],"sourceRoot":""}