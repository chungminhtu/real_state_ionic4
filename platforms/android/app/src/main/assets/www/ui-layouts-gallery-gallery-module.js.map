{"version":3,"sources":["webpack:///./src/app/ui-layouts/gallery/gallery.module.ts","webpack:///./src/app/ui-layouts/gallery/gallery.page.html","webpack:///./src/app/ui-layouts/gallery/gallery.page.scss","webpack:///./src/app/ui-layouts/gallery/gallery.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,y+D;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACgE;AACxD;AAI1D,2DAA2D;AACgC;AAQ3F;IAQE,qBACU,SAA2B,EAC5B,QAAwB,EACvB,iBAAoC,EACpC,eAAgC,EACjC,YAA+B;QAJ9B,cAAS,GAAT,SAAS,CAAkB;QAC5B,aAAQ,GAAR,QAAQ,CAAgB;QACvB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QACjC,iBAAY,GAAZ,YAAY,CAAmB;QAVjC,gBAAW,GAAM,EAAE,CAAC;QAC1B,wCAAwC;QACxC,gBAAW,GAAW,KAAK,CAAC;IAW7B,CAAC;IAED,8BAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAM,gBAAgB,CAAC,CAAC,YAAY,EAAE,CAAC;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAG;YACvB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5D,UAAU,CAAC;gBACV,0BAA0B;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC;IACF,CAAC;IAED,oCAAc,GAAd;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,+CAA+C;IACzE,CAAC;IACD,qCAAe,GAAf,UAAgB,KAAK;QACnB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,oEAAoE;QACrE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,SAAS,EAAE,sGAAsB;YACjC,cAAc,EAAE;gBACd,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,KAAK,EAAE,KAAK;aACb;SACF,CAAC,CAAC,IAAI,CAAC,eAAK;YACX,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IA5CW,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,0GAAkC;;SAEnC,CAAC;yCAUqB,wEAAgB;YAClB,6DAAc;YACJ,gEAAiB;YACnB,8DAAe;YACnB,gEAAiB;OAb7B,WAAW,CA6CvB;IAAD,kBAAC;CAAA;AA7CuB","file":"ui-layouts-gallery-gallery-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GalleryPage } from './gallery.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GalleryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GalleryPage]\n})\nexport class GalleryPageModule {}\n","module.exports = \"\\n    \\n<ion-header>\\n    <ion-toolbar color=\\\"danger\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"toggleSideMenu()\\\">\\n                <ion-icon class=\\\"menu-icon\\\"  name=\\\"md-menu\\\" color=\\\"light\\\" slot=\\\"start\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title slot=\\\"start\\\">GALERY</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar no-border-top color=\\\"danger\\\">\\n      <ion-segment [(ngModel)]=\\\"galleryView\\\" >\\n        <ion-segment-button value=\\\"two\\\">\\n             <ion-label>Two columns </ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"three\\\">\\n            <ion-label>Three columns </ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"four\\\">\\n            <ion-label>Four columns</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content >\\n\\n  \\n  <!--***********  2 columns  ***********-->\\n  <ion-grid  *ngIf=\\\"galleryView==='two'\\\">\\n      <ion-row wrap color=\\\"gray\\\">\\n        <ion-col size=\\\"6\\\"  *ngFor=\\\"let image of imagesArray,let i = index\\\">\\n            <img [src]=\\\"image.url\\\"   (click)=\\\"openImageViewer(i)\\\"/>\\n        </ion-col>\\n      </ion-row>\\n  </ion-grid>\\n  \\n  <!--***********  3 columns  ***********-->\\n  \\n  <ion-grid *ngIf=\\\"galleryView==='three'\\\">\\n      <ion-row wrap color=\\\"gray\\\">\\n        <ion-col size=\\\"4\\\"  *ngFor=\\\"let image of imagesArray,let i = index\\\"  >\\n          <img [src]=\\\"image.url\\\"   (click)=\\\"openImageViewer(i)\\\"/>\\n        \\n        </ion-col>\\n      </ion-row>\\n  </ion-grid>\\n  \\n  \\n  <!--***********  4 columns  ***********-->\\n  <ion-grid *ngIf=\\\"galleryView==='four'\\\">\\n      <ion-row wrap color=\\\"gray\\\">\\n        <ion-col  size=\\\"3\\\" *ngFor=\\\"let image of imagesArray,let i = index\\\" >\\n            <img [src]=\\\"image.url\\\"   (click)=\\\"openImageViewer(i)\\\"/>\\n        </ion-col>\\n      </ion-row>\\n  </ion-grid>\\n  \\n  </ion-content>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLWxheW91dHMvZ2FsbGVyeS9nYWxsZXJ5LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MenuController, ModalController,NavController, LoadingController, ToastController} from '@ionic/angular';\nimport { AngularFirestore} from '@angular/fire/firestore';\n\nimport { Observable } from 'rxjs';\n\n//*********** Import  gallery viewer modal **************//\nimport { GalleryViewerModalPage } from '../gallery-viewer-modal/gallery-viewer-modal.page';\n\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.page.html',\n  styleUrls: ['./gallery.page.scss'],\n})\nexport class GalleryPage implements OnInit {\n\n  public images: Observable<any[]>;\n  public imagesArray: any=[];\n   //*********** View mode  **************/\n   galleryView: string = \"two\";\n\n\n  constructor(\n    private firestore: AngularFirestore,\n    public menuCtrl: MenuController,\n    private loadingController: LoadingController ,\n    private modalController: ModalController,\n    public loadingPopup: LoadingController\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.images = this.firestore.collection<any>('layout_gallery').valueChanges();\n    this.images.subscribe(res => {\n      this.imagesArray = res;\n      console.log(\"imageArray=\"+JSON.stringify(this.imagesArray));\n      setTimeout(() => {\n       // loadingPopup.dismiss();\n      }, 1000);\n  })\n  }\n\n  toggleSideMenu() {\n    this.menuCtrl.toggle(); //Add this method to your button click function\n  }\n  openImageViewer(image) {\n    console.log(\"openImageViewer\")\n    // let modal = this.modalCtrl.create(CartPage, { data: this.cart });\n   this.modalController.create({\n     component: GalleryViewerModalPage,\n     componentProps: {\n       data: this.imagesArray,\n       index: image\n     }\n   }).then(modal => {\n     modal.present();\n   });\n }\n}\n"],"sourceRoot":""}